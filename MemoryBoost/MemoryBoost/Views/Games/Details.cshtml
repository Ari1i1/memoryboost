@model MemoryBoost.Models.Game

@{
    ViewData["Title"] = "Details";
}

@using (Html.BeginForm("Results", "Games"))
{
    <div class="row justify-content-between">
        <div>
            <div>
                <a class="text-white px-xl-5 px-lg-5 px-md-4 timer" style="font-size: 20px;">time left: 00:00:@Model.Level.SecForMemorizing</a>
                <input type="hidden" name="timer" value="" />
            </div>
        </div>
        <div class="my-2 mr-5">
            <a class="text-white px-xl-5 px-lg-5 px-md-4" style="font-size: 20px;">level: @Model.Level.Name</a>
            <input type="hidden" name="numberOfCards" asp-for="@Model.Level.CardsNumber" />
            <input type="hidden" name="secForMemorizing" asp-for="@Model.Level.SecForMemorizing" />
        </div>
    </div>
    <div class="row justify-content-between">
        <div>
            <div>
                <a class="text-white px-xl-5 px-lg-5 px-md-4" name="score" style="font-size: 20px;">points: @Model.Score</a>
            </div>
        </div>
        <div class="row my-2">
            <div class="mr-2">
                <input name="pause" value="pause" type="button" class="btn btn-lg btn-block btn-outline px-xl-5 px-lg-5 px-md-4" 
                       style="background-color: #59F9CC; color: #806CDD; border-radius: 35px;"/>
            </div>
            <div class="mr-5">
                <input type="hidden" name="score" value="" />
                <input type="hidden" name="id" value="@Model.Id" />
                <input type="submit" class="btn btn-lg btn-block btn-outline text-white px-xl-5 px-lg-5 px-md-4" value="stop"
                       style="border-color: white; border-radius: 35px;" />
            </div>
        </div>
    </div>
}

<div class="row">
    <div style="background-color: rgba(255,255,255,0.5); color: #806CDD; border-radius: 35px;"
         class="container h-100 d-flex flex-column align-self-center justify-content-center">
        <div class="cardWrapper">
            <div class="row d-flex justify-content-center">
                @for (int j = 0; j < Model.Cards.Count / 2; j++)
                {
                    <div class="col-lg-1 col-md-1 col-sm-1 col-xs-6 my-5 cardContainer align-self-center">
                        <div class="card">
                            <div class="front"><h3 class="cardTitle">Flip me!</h3></div>
                            <div class="back d-flex justify-content-center">
                                <img src="@Model.Cards[j].FilePath" alt="@Model.Cards[j].FileName" class="align-self-center" style="width: 100%; height: 80%;" />
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="row d-flex justify-content-center">
                @for (int j = Model.Cards.Count / 2; j < Model.Cards.Count; j++)
                {
                    <div class="col-lg-1 col-md-1 col-sm-1 col-xs-6 my-5 cardContainer align-self-center">
                        <div class="card">
                            <div class="front"><h3 class="cardTitle">Flip me!</h3></div>
                            <div class="back d-flex justify-content-center">
                                <img src="@Model.Cards[j].FilePath" alt="@Model.Cards[j].FileName" class="align-self-center" style="width: 100%; height: 80%;" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>